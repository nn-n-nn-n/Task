// Task.cpp : Определяет функции для статической библиотеки.
//

#include "pch.h"
#include "Task.h"

void Sort(int* array, int size, bool direction)
{
    bool exchange = false; // признак того, что за один проход цикла были найдены элементы подлежащие обмену
    int n = size - 1;
    do
    {
        exchange = false; //  в начале цикла полагаем, что обменов не будет
        for (int i = 0; i < n; i++)  // цикл перебора элементов массива
        {
            if (array[i] > array[i + 1] && direction == 1)      // сортировка по возрастанию 
            {
                int t = array[i];                               // дополнительная переменная для замены значений
                array[i] = array[i + 1];
                array[i + 1] = t;
                exchange = true;
            }

            else if (array[i] < array[i + 1] && direction == 0) // сортировка по убыванию
            {
                int t = array[i];                               // дополнительная переменная для замены значений
                array[i] = array[i + 1];
                array[i + 1] = t;
                exchange = true;
            }
        }
        n--;    // в первого прохода самый большой элемент встает на свое место
        // соответственно в следующий раз его уже проверять не нужно  -
        // уменьшаем количество проверяемых элементов на 1
    } while (exchange); // повторяем, если за цикл была хотя бы одно перестановка
}  // если перестановок не было - то массив отсортирован

/*
Создайте функцию сортировки методом пузырька целочисленного массива по возрастанию или по убыванию,
в зависимости от выбранного направления сортировки.

1. Функция должна иметь имя Sort
2. Функция в качестве параметров должна принимать следующее:
- первый параметр - указатель на сортируемый массив
- второй параметр - количество элементов массива
- третий параметр - направление сортировки. true - сортировка по возрастанию. false - сортировка по убыванию

3. Функция должна возвращать void.

	!!!!! ВАЖНО !!!!!
	В данном файле разрешается разместить кроме кода требуемой функции - код любых других вспомогательных
	функций. Никакой функции main() в этом файле быть не должно.
	Если вы хотите испытать и отладить вашу функцию - пишите код в файле Example.cpp проекта Example данного решения
	Для этого задайте в качестве запускаемого проекта проект Example.

	ДЛЯ АВТОМАТИЧЕСКОГО ТЕСТИРОВАНИЯ  проверки правильности работы вашего задания - сделайте запукаемым проект
	Tests и запустите его. Если функция написана правильно - все тесты должны успешно выполниться
	(зеленый цвет в консоли). Если ваша функция работает некорректно - в консоли будут сообщения красным цветом
*/